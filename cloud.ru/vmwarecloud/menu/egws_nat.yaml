entities:
  seaf.ta.reverse.vmwarecloud.egws_nat:
    menu: >
      (

          $egws_entity := "seaf.ta.reverse.general".config.entities.vmwarecloud.egws.model;
          $egws_view := "seaf.ta.reverse.general".config.entities.vmwarecloud.egws.view;
          $egws_nat_entity := "seaf.ta.reverse.general".config.entities.vmwarecloud.egws_nat.model;
          $egws_nat_view := "seaf.ta.reverse.general".config.entities.vmwarecloud.egws_nat.view;
          $vdcs_entity := "seaf.ta.reverse.general".config.entities.vmwarecloud.vdcs.model;
          $dcs_entity := "seaf.ta.reverse.general".config.entities.dc.model;
          $orgs_entity := "seaf.ta.reverse.general".config.entities.vmwarecloud.orgs.model;
          $vdcgroups_entity := "seaf.ta.reverse.general".config.entities.vmwarecloud.vdcgroups.model;
      
          $egws_nat_menu_generator := function($prefix, $domain){(
      
              $domain_matcher := $eval('/^' & $domain & '.*/');
          
              $egws := ($lookup($, $egws_entity) ~> $each(function($v, $k){$domain_matcher($k) ? {$k:$v}}));
              $egws_nat := $lookup($, $egws_nat_entity) ~> $each(function($v, $k){$domain_matcher($k) ? {$k:$v}});
              $dcs := $lookup($, $dcs_entity) ~> $each(function($v, $k){$domain_matcher($k) ? {$k:$v}});
              $vdcs := $lookup($, $vdcs_entity) ~> $each(function($v, $k){$domain_matcher($k) ? {$k:$v}});
              $vdcgroups := $lookup($, $vdcgroups_entity) ~> $each(function($v, $k){$domain_matcher($k) ? {$k:$v}});
              $orgs := $lookup($, $orgs_entity) ~> $each(function($v, $k){$domain_matcher($k) ? {$k:$v}});
                
              $dynamic := [$egws_nat.$spread().(
                  $id := $keys()[0];
                  $gw := $.*.gw;
                  $egw := $egws.$spread()[$keys() = $gw];
                  $egwtitle := $egw.*.title;
                  $egw.*.reverse.vdcgroup != null ? (
                      $vdcgrouptitle := $egw.*.vdcgroup_title;
                      $vdcgroup_id := $egw.*.vdcgroup;
                      $org_id := $egw.*.org;
                      $org := $orgs.$spread()[$keys() = $org_id];
                      $orgtitle := $org.*.title;
                      $dc := $dcs.$spread()[$keys() = $org.*.dc];
                      {
                          'domain': $domain,
                          'location': $prefix & '/' & $dc.*.title & '/Облако VMware/Организации/'  & $orgtitle & '/' & $vdcgrouptitle & '/Edge Gateways/' & $egwtitle & '/' & $.*.type & '/' & $.*.title,
                          'link': 'entities/' & $egws_nat_entity & '/' & $lowercase($.*.type) & '_schema?id=' & $id
                      }
                  ) : (
                      $vdctitle := $egw.*.vdc_title;
                      $vdc_id := $egw.*.vdc;
                      $org_id := $egw.*.org;
                      $org := $orgs.$spread()[$keys() = $org_id];
                      $orgtitle := $org.*.title;
                      $dc := $dcs.$spread()[$keys() = $org.*.dc];
                      {
                          'prefix': $domain,
                          'location': $prefix & '/' & $dc.*.title & '/Облако VMware/Организации/' & $orgtitle & '/' & $vdctitle & '/Edge Gateways/' & $egwtitle & '/' & $.*.type & '/' & $.*.title,
                          'link': 'entities/' & $egws_nat_entity & '/' & $lowercase($.*.type) & '_schema?id=' & $id
                      }
                  )
              )]
          )};
          sber.kadzo ? (
              sber.kadzo.enterprise_mode ?
              sber.domains.$spread().( 
                  $domain := $keys(); 
                  $title := $lookup($$.companies, $domain) ? $lookup($$.companies, $domain).title : $.*.title;
                  $prefix := "ДЗО/" & $title & "/Реверс";
                  $egws_nat_menu_generator($prefix, $domain);
              ) : (
                    $not($exists(sber.kadzo.enterprise_mode)) and (sber.kadzo.menu.architecture.enabled = true or $not($exists(sber.kadzo.menu.architecture.enabled))) ? (
                        $menu_root := ($exists(sber.kadzo.menu.architecture.roots) and $count(sber.kadzo.menu.architecture.roots) > 0 and $not(sber.kadzo.menu.architecture.roots = null))  ? sber.kadzo.menu.architecture.roots :
                                        $exists(sber.kadzo.menu_root) ? sber.kadzo.menu_root : "Документы/Сбер/КА ДЗО/2023";
                    $domain := sber.domain;
                    $prefix := $menu_root & "/Реверс";
                    $egws_nat_menu_generator($prefix, $domain);
                  )
              ) 
          ) : (
              $config := "seaf.ta.reverse.general".config;
              $prefix := $config.arch_menu;
              $domain := "";
              $egws_nat_menu_generator($prefix, $domain);
          );
      )