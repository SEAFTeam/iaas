functions:
  reverse_vmwarecloud_vappnets:
    title: Список vAppNetworks
    params:
        - alias: dataset
          type: object
          title: Озеро данных
          required: true  # Признак обязательности параметра функции
        - alias: domain
          type: string
          title: Домен организации
          required: false  # Признак обязательности параметра функции
    code: >
        (
            $domain := domain;
            $domain_matcher := $eval('/^' & $domain & '.*/');
        
            $vappnets_entity := dataset."seaf.ta.reverse.general".config.entities.vappnets.model;
            $vappnets_view := dataset."seaf.ta.reverse.general".config.entities.vappnets.view;
            $vapps_entity := dataset."seaf.ta.reverse.general".config.entities.vapps.model;
            $vapps_view := dataset."seaf.ta.reverse.general".config.entities.vapps.view;
            $vdcs_entity := dataset."seaf.ta.reverse.general".config.entities.vdcs.model;
            $vdcs_view := dataset."seaf.ta.reverse.general".config.entities.vdcs.view;
            $orgs_entity := dataset."seaf.ta.reverse.general".config.entities.orgs.model;
            $orgs_view := dataset."seaf.ta.reverse.general".config.entities.orgs.view;
            $dcs_entity := dataset."seaf.ta.reverse.general".config.entities.dc.model;
        
            $vappnets := $lookup(dataset, $vappnets_entity)[$domain_matcher($keys())];
            $vapps := $lookup(dataset, $vapps_entity)[$domain_matcher($keys())];
            $vdcs := $lookup(dataset, $vdcs_entity)[$domain_matcher($keys())];
            $orgs := $lookup(dataset, $orgs_entity)[$domain_matcher($keys())];
            $dcs := $lookup(dataset, $dcs_entity)[$domain_matcher($keys())];
             
            [[$vappnets.$spread().{
                'id': $keys(),
                'vappnet': *
            }].(
                $vapp_id := vappnet.vapp_id;
                $vapp := $vapps.$spread()[$keys() = $vapp_id];
                $vdc_id := $vapp.*.vdc_id;
                $vdc := $vdcs.$spread()[$keys() = $vdc_id];
                $org_id := $vdc.*.org_id;
                $org := $orgs.$spread()[$keys() = $org_id];
                $dc := $dcs.$spread()[$keys() = $org.*.DC];
                {
                    'id': id,
                    'short_id': vappnet.id,
                    'name': vappnet.name,
                    'description': vappnet.description,
                    'gateway': vappnet.gateway,
                    'netmask': vappnet.netmask,
                    'fencemode': vappnet.fencemode,
                    'ipscopes': vappnet.ipscopes,
                    'parentnetwork_id': vappnet.parentnetwork_id,
                    'dns': vappnet.dns,
                    'vapp_name': $vapp.*.name,
                    'vapp_id': vappnet.vapp_id,
                    'vdc_name': $vdc.*.name,
                    'vdc_id': $vdc.*.id,
                    'org_name': $org.*.name,
                    'org_id': $org.*.id,
                    'link': '/entities/' & $vappnets_view & '/card?id=' & id,
                    'vapp_link': '/entities/' & $vapps_view & '/card?id=' & vappnet.vapp_id,
                    'entity': $vappnets_view,
                    'entity_type': 'VMware Cloud',
                    'entity_name': 'vApp Network в облаке VMware',
                    'DC': $dc.$keys()[0],
                    'dc_name': $dc.*.title
                }
            )]
        )