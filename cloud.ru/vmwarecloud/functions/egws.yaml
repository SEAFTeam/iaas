functions:
    reverse_vmwarecloud_egws:
        title: Список edge gateways
        params:
            - alias: dataset
              type: object
              title: Озеро данных
              required: true  # Признак обязательности параметра функции
            - alias: domain
              type: string
              title: Домен организации
              required: false  # Признак обязательности параметра функции
        code: >
            (
                $domain := domain;
                $domain_matcher := $eval('/^' & $domain & '.*/');
            
                $egws_entity := dataset."seaf.ta.reverse.general".config.entities.vmwarecloud.egws.model;
                $egws_view := dataset."seaf.ta.reverse.general".config.entities.vmwarecloud.egws.view;
                $egws_fw_entity := dataset."seaf.ta.reverse.general".config.entities.vmwarecloud.egws_fw.model;
                $egws_fw_view := dataset."seaf.ta.reverse.general".config.entities.vmwarecloud.egws_fw.view;
                $egws_nat_entity := dataset."seaf.ta.reverse.general".config.entities.vmwarecloud.egws_nat.model;
                $egws_nat_view := dataset."seaf.ta.reverse.general".config.entities.vmwarecloud.egws_nat.view;
                $orgnets_entity := dataset."seaf.ta.reverse.general".config.entities.vmwarecloud.orgnets.model;
                $vdcs_entity := dataset."seaf.ta.reverse.general".config.entities.vmwarecloud.vdcs.model;
                $vdcs_view := dataset."seaf.ta.reverse.general".config.entities.vmwarecloud.vdcs.view;
                $vdcgroups_entity := dataset."seaf.ta.reverse.general".config.entities.vmwarecloud.vdcgroups.model;
                $vdcgroups_view := dataset."seaf.ta.reverse.general".config.entities.vmwarecloud.vdcgroups.view;
                $orgs_entity := dataset."seaf.ta.reverse.general".config.entities.vmwarecloud.orgs.model;
                $orgs_view := dataset."seaf.ta.reverse.general".config.entities.vmwarecloud.orgs.view;
                $dcs_entity := dataset."seaf.ta.reverse.general".config.entities.dc.model;
            
                $egws := ($lookup(dataset, $egws_entity) ~> $each(function($v, $k){$domain_matcher($k) ? {$k:$v}}));
                $egws_nat := $lookup(dataset, $egws_nat_entity) ~> $each(function($v, $k){$domain_matcher($k) ? {$k:$v}});
                $egws_fw := $lookup(dataset, $egws_fw_entity) ~> $each(function($v, $k){$domain_matcher($k) ? {$k:$v}});
                $vdcs := $lookup(dataset, $vdcs_entity) ~> $each(function($v, $k){$domain_matcher($k) ? {$k:$v}});
                $vdcgroups := $lookup(dataset, $vdcgroups_entity) ~> $each(function($v, $k){$domain_matcher($k) ? {$k:$v}});
                $orgnets := $lookup(dataset, $orgnets_entity) ~> $each(function($v, $k){$domain_matcher($k) ? {$k:$v}});
                $orgs := $lookup(dataset, $orgs_entity) ~> $each(function($v, $k){$domain_matcher($k) ? {$k:$v}});
                $dcs := $lookup(dataset, $dcs_entity) ~> $each(function($v, $k){$domain_matcher($k) ? {$k:$v}});
            
                [[$egws.$spread().{
                    'id': $keys(),
                    'egw': *
                }].(
                    $vdc_id := egw.vdc;
                    $vdc := $vdcs.$spread()[$keys() = $vdc_id];
                    $org_id := egw.org;
                    $org := $orgs.$spread()[$keys() = $org_id];
                    $orgtitle := $org.*.title;
                    $dc := $dcs.$spread()[$keys() = $org.*.dc];
                    $vdcgroup := egw.vdcgroup = null ? (
                        $tmp := $vdcgroups.$spread()[$vdc_id in *.vdcs.id];
                        $exists($tmp) ? {'id': $tmp.$keys()[0], 'title': $tmp.*.title } : {'id': null, 'title': null};
                    ) : ({'id': egw.vdcgroup, 'title': egw.vdcgroup_title});
                    {
                        'id': id,
                        'short_id': egw.id,
                        'title': egw.title,
                        'description': egw.description,
                        'type': egw.type,
                        'gatewayinterfaces': egw.gatewayinterfaces,
                        'advancedNetworkingEnabled': egw.advancedNetworkingEnabled,
                        'distributedRoutingEnabled': egw.distributedRoutingEnabled,
                        'vdc_title': egw.vdc_title,
                        'vdc': egw.vdc,
                        'vdcgroup_title': $vdcgroup.title,
                        'vdcgroup': $vdcgroup.id,
                        'org_title': $org.*.title,
                        'org': egw.org,
                        'link': '/entities/' & $egws_view & '/card?id=' & id,
                        'vdc_link': '/entities/' & $vdcs_view & '/card?id=' & egw.vdc,
                        'org_link': '/entities/' & $orgs_view & '/card?id=' & $org_id,
                        'entity': $egws_view,
                        'entity_type': 'VMware Cloud',
                        'entity_title': 'Edge Gateway в облаке VMware',
                        'egws_nat_entity': $egws_nat_view,
                        'egws_fw_entity': $egws_fw_view,
                        'dc': $dc.$keys()[0],
                        'dc_title': $dc.*.title
                    }
                )]
            )