entities:
  seaf.ta.reverse.cloud_ru.advanced.backup_policies:
    presentations:
      server_backup:
        type: table
        headers:
          - value: name
            text: Наименование ресурса
            sortable: true
            align: left
            width: 200
          - value: type
            text: Тип ресурса
          - value: backup_vault
            text: Хранилище РК
            width: 200
          - value: backup_schedule
            text: Расписание РК
          - value: backup_retention
            text: Длительность хранения РК
          - value: backup_schedule_status
            text: Статус расписания РК
          - value: backup_state
            text: Статус резервной копии
          - value: tenant
            text: Тенант
          - value: dc
            text: Датацентр
        source: >
          (
            $ctx := $params;
            $domain_matcher := $eval('/^' & $ctx.domain & '.*/');
            $servers := $."seaf.ta.reverse.cloud_ru.advanced.ecss" ~> $each(function($v, $k){$domain_matcher($k) ? {$k:$v}});
            $vaults := $."seaf.ta.reverse.cloud_ru.advanced.vaults" ~> $each(function($v, $k){$domain_matcher($k) ? {$k:$v}});
            $cdcs := $."seaf.ta.services.dc" ~> $each(function($v, $k){$domain_matcher($k) ? {$k:$v}});
            $backup_policies := $."seaf.ta.reverse.cloud_ru.advanced.backup_policies" ~> $each(function($v, $k){$domain_matcher($k) ? {$k:$v}});
            $bkp_server := $servers.$spread()[$keys()[0] = $ctx.id];
            $disks := $bkp_server.*.disks.$keys();
            $bkp_server.(
                $server := $;
                $id := $.*.id;
                $name := $.*.name;
                $disks := $.*.disks;
                $srv_vault := $vaults.$spread()[$id in *.resources.id];
                $disk_vault := $disks.(
                    $diskid := $.$keys();
                    $disk := $;
                    $vaults.$spread()[$diskid in *.resources.id].(
                        $vid := $.*.id;
                        $schedule := $backup_policies.$spread()[$vid in *.associated_vaults.vault_id];
                        $dc_id := $server.*.DC;
                        $dc := $cdcs.$spread()[$keys()[0] = $dc_id].*.title;
                        [{
                            'name': $server.*.name & ' - ' & $disk.*.device,
                            'type': 'volume',
                            'backup_vault': $.*.name,
                            'backup_schedule': $join($schedule.*.trigger.properties.pattern, '\n'),
                            'backup_retention': $schedule.*.operation_definition.retention_duration_days,
                            'backup_schedule_status': $schedule.*.enabled = true ? "Да" : "Нет",
                            'backup_state': $.*.resources[id=$diskid].protect_status,
                            'dc': $dc,
                            'tenant': $server.*.tenant
                        }]
                    )
                );
                $schedule_srv := $srv_vault.($vids := $.*.id; $backup_policies.$spread()[$vids in *.associated_vaults.vault_id]);
                $dc_id := $.*.DC;
                $dc := $cdcs.$spread()[$keys()[0] = $dc_id].*.title;
                $srv_backup := $schedule_srv.(
                $assc_vaults := $.*.associated_vaults;
                {
                    'name': $name,
                    'type': 'vm',
                    'backup_vault': $.*.name,
                    'backup_schedule': $.*.trigger.properties.pattern,
                    'backup_retention': $.*.operation_definition.retention_duration_days,
                    'backup_schedule_status': $.*.enabled  = true ? "Да" : "Нет",
                    'backup_state': $srv_vault[*.id in $assc_vaults.vault_id].*.resources[id=$id].protect_status,
                    'dc': $dc,
                    'tenant': $.*.tenant
                });
                $append($srv_backup, $disk_vault);
            );
          )
      table_view:
        type: table
        headers:
          - value: name
            text: Название политики РК
            width: 300
            sortable: true
            link: link
          - value: operation_type
            text: Назначение политики РК
            width: 200
            sortable: true
          - value: enabled
            text: Включена
            width: 200
            sortable: true
          - value: tenant
            text: Тенант
            width: 200
            sortable: true
          - value: id
            text: Идентификатор политики РК
            width: 200
            sortable: true
        source: >
          (
            $ctx := $params;
            $domain_matcher := $eval('/^' & $ctx.domain & '.*/');
            $backup_policies := $."seaf.ta.reverse.cloud_ru.advanced.backup_policies" ~> $each(function($v, $k){$domain_matcher($k) ? {$k:$v}});
              [$distinct($backup_policies.$spread().(
                $backup_policies_table := (
                  [$backup_policies.$spread().(
                      $wide_id := $keys();
                      {
                                  "id": $keys()[0],
                                  "backup_policies": $.*
                      } ~> | $.* | enabled  = true ? {"enabled": "Да"} : {"enabled": "Нет"}| 
                          ~> | $.* | {"link": "/entities/seaf.ta.reverse.cloud_ru.advanced.backup_policies/backup_policies_md?id=" & $wide_id}|)
                  ]
              )).backup_policies)]
          )
      backup_policies_md:
        type: markdown
        template: templates/backup_policy.md
        source: >
          (
              $ctx := $params;
              $backup_policy := $."seaf.ta.reverse.cloud_ru.advanced.backup_policies" ~> $each(function($v, $k){$ctx.id = $k ? {$k:$v}});
              $backup_policy.*
          )