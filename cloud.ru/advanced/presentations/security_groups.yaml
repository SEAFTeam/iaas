entities:
  seaf.ta.reverse.cloud_ru.advanced.security_groups:
    presentations:
      table_view:
        type: table
        headers:
          - value: name
            text: Название правила
            width: 300
          - value: direction
            text: Направление
          - value: ethertype
            text: Протокол l3
          - value: protocol
            text: Протокол l4
          - value: protocol_port
            text: Порт
          - value: remote
            text: Партнер
        source: >
          (
              $ctx := $params;
              $domain_matcher := $eval('/^' & $ctx.domain & '.*/');
              $csecurity_groups := $."seaf.ta.reverse.cloud_ru.advanced.security_groups" ~> $each(function($v, $k){$domain_matcher($k) ? {$k:$v}});
              $security_group := $."seaf.ta.reverse.cloud_ru.advanced.security_groups" ~> $each(function($v, $k){$domain_matcher($k) ? {$k:$v}});
              $security_group := $security_group[*.id = $ctx.id];
              $security_group.*.rules.(
                  $rgid := $.remote_group_id;
                  $remote := (
                      $.remote_group_id != null ? $csecurity_groups.$spread()[$keys()[0] = $rgid].*.name :
                          $.remote_address_group_id != null ? $.remote_address_group_id : 
                              $.remote_ip_prefix != null ? $.remote_ip_prefix;
                  );
                  {
                      'name': $.description,
                      'direction': $.direction,
                      'ethertype': $.ethertype,
                      'protocol': $.protocol,
                      'protocol_port': $.protocol_port,
                      'remote': $remote
                  }
              )
          )
      table_viewRegistry:
        type: table
        headers:
          - value: name
            text: Security Group Name
            width: 300
          - value: description
            text: Описание Security Group
            width: 200
            sortable: true
          - value: tenant
            text: Тенант
            width: 200
            sortable: true
          - value: id
            text: Security Groups ID
            width: 200
            sortable: true
        source: >
          (
              $ctx := $params;
              $domain_matcher := $eval('/^' & $ctx.domain & '.*/');
              $security_groups := $."seaf.ta.reverse.cloud_ru.advanced.security_groups" ~> $each(function($v, $k){$domain_matcher($k) ? {$k:$v}});
              [$distinct($security_groups.(
                  {
                      "id": $keys()[0],
                      "security_groups": $.*
                  }
              ).security_groups)]
          )
      list_for_servers:
        type: table
        headers:
          - value: name
            text: Наименование
            width: 200
          - value: description
            text: Описание
            width: 300
          - value: direction
            text: Направление
          - value: ethertype
            text: Протокол l3
          - value: protocol
            text: Протокол l4
          - value: protocol_port
            text: Порт
          - value: remote
            text: Партнер
        source: >
          (
              $ctx := $params;
              $manifest := $;
              $domain_matcher := $eval('/^' & $.domain & '.*/');
              $cserver := $manifest."seaf.ta.reverse.cloud_ru.advanced.ecss" ~> $each(function($v, $k){$domain_matcher($k) and $k = $ctx.id ? {$k:$v}});
              $ccce := $manifest."seaf.ta.reverse.cloud_ru.advanced.cces" ~> $each(function($v, $k){$domain_matcher($k) and $k = $ctx.id ? {$k:$v}});
              $cdmss := $manifest."seaf.ta.reverse.cloud_ru.advanced.dmss" ~> $each(function($v, $k){$domain_matcher($k) and $k = $ctx.id ? {$k:$v}});
              $cobjects := $append($cdmss, $append($cserver, $ccce));
              $csecurity_groups := $manifest."seaf.ta.reverse.cloud_ru.advanced.security_groups" ~> $each(function($v, $k){$domain_matcher($k) ? {$k:$v}});
              $security_groups := $cobjects.*.security_groups.($id := $; $csecurity_groups.$spread()[*.id = $id]);
              $security_groups.$spread().(
                  $name := $.*.name;
                  $.*.rules.(
                      $rgid := $.remote_group_id;
                      $remote := (
                          $.remote_group_id != null ? $csecurity_groups.$spread()[$keys()[0] = $rgid].*.name :
                              $.remote_address_group_id != null ? $.remote_address_group_id : 
                                  $.remote_ip_prefix != null ? $.remote_ip_prefix;
                      );
                      {
                          'name': $name,
                          'description': $.description,
                          'direction': $.direction,
                          'ethertype': $.ethertype,
                          'protocol': $.protocol,
                          'protocol_port': $.protocol_port,
                          'remote': $remote
                      }
                  )
              )
          )